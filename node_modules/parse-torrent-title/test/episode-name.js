const { expect } = require("chai");
const parse = require("../index").parse;

xdescribe("Parsing episode name", () => {
    it("should detect a regular episode name correctly", () => {
        const releaseName = "Marvel's.Agents.of.S.H.I.E.L.D.S02E01.Shadows.1080p.WEB-DL.DD5.1";
        expect(parse(releaseName)).to.deep.include({ episodeName: "Shadows" });
    });

    it("should detect a regular episode name correctly", () => {
        const releaseName = "Gotham.S01E05.Viper.WEB-DL.x264.AAC";
        expect(parse(releaseName)).to.deep.include({ episodeName: "Viper" });
    });

    it("should detect regular episode name with a space between", () => {
        const releaseName = "The Missing 1x01 Pilot HDTV x264-FoV [eztv]";
        expect(parse(releaseName)).to.deep.include({ episodeName: "Pilot" });
    });

    it("should detect regular episode name correctly, even with . in the name", () => {
        const releaseName = "Doctor.Who.2005.8x11.Dark.Water.720p.HDTV.x264-FoV[rartv]";
        expect(parse(releaseName)).to.deep.include({ episodeName: "Dark Water" });
    });

    it("should detect regular episode name correctly, even with . in the name", () => {
        const releaseName = "Gotham.S01E07.Penguins.Umbrella.WEB-DL.x264.AAC";
        expect(parse(releaseName)).to.deep.include({ episodeName: "Penguins Umbrella" });
    });

    it("should detect regular episode name correctly, even with _ in the name", () => {
        const releaseName = "doctor_who_2005.8x12.death_in_heaven.720p_hdtv_x264-fov";
        expect(parse(releaseName)).to.deep.include({ episodeName: "death in heaven" });
    });

    it("should detect regular episode name correctly, even with - in the name", () => {
        const releaseName = "Game of Thrones - 4x03 - Breaker of Chains";
        expect(parse(releaseName)).to.deep.include({ episodeName: "Breaker of Chains" });
    });
});
