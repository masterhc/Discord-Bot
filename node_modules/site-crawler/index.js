var async = require('async')
var request = require('request')
var cheerio = require('cheerio')
var url = require('url')
var UrlParser = require('url-parse')
var EventEmitter = require('events').EventEmitter

var Crawler = function(opt) {
	if(!opt) opt = {}
	this.concurrency = opt.concurrency||10
	this.queued = 0
	this.completed = 0
	this.url = null
	this.crawled = []
	this.crawler = async.queue(this._task.bind(this),this.concurrency)
	this.emitter = new EventEmitter()
	this.defaultFoundHandler = function(url,next) {
		next(url)
	}
	this.defaultCrawlHandler = function(url,res,$,next) {
		next()
	}
	this.emitter.on('found',this.defaultFoundHandler)
	this.emitter.on('crawl',this.defaultCrawlHandler)
}
Crawler.prototype._task = function(task,callback) {
	var that = this
	request.get(task.uri,function(err,res,body) {
		if(err || res.statusCode!==200) {
			that.emitter.emit('error',task.uri,err||res)
			that.completed++
			callback(err)
			if(that.queued-that.completed === 0) {
				that.emitter.emit('complete')
			}
			return
		}
		var $ = cheerio.load(body)
		that.emitter.emit('crawl',task.uri,res,$,function() {
			$('a').each(function(index, a) {
				var href = $(a).attr('href')
				if(!href) {
					return
				}
				var url_found = new UrlParser(url.resolve(task.uri,href))
				var found = url_found.protocol+'//'+url_found.host+url_found.pathname
				if(that.crawled.indexOf(found) >= 0) {
					return
				}
				that.emitter.emit('found',found,function(found) {
					if(!found) {
						that.crawled.push(href)
						return
					}
					that.queued++
					that.crawled.push(found)
					that.crawler.push({uri:found})
				})
			})
			that.completed++
			callback()
			if(that.queued-that.completed === 0) {
				that.emitter.emit('complete')
			}
		})
	})
	.setMaxListeners(0)
}
Crawler.prototype.on = function(type,listener) {
	if(type==='found') this.emitter.removeListener(type,this.defaultFoundHandler)
	if(type==='crawl') this.emitter.removeListener(type,this.defaultCrawlHandler)
	this.emitter.on(type,listener)
	return this
}
Crawler.prototype.start = function(url) {
	this.url = url
	this.queued = 1
	this.crawler.push({uri:url})
}
module.exports = Crawler
